module sipo_shift_register (
  input wire clk,         // Clock input
  input wire reset,       // Reset input
  input wire serial_in,   // Serial input
  output wire [3:0] parallel_out // Parallel output (4 bits in this example)
);

  reg [3:0] register; // 4-bit shift register

  always @(posedge clk or posedge reset) begin
    if (reset) begin
      // Reset the shift register to all zeros
      register <= 4'b0000;
    end else begin
      // Shift the data in on the rising edge of the clock
      register <= {serial_in, register[3:1]};
    end
  end

  assign parallel_out = register;

endmodule
